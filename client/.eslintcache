[{"D:\\Projetos\\react-blog\\client\\src\\pages\\admin\\Profile\\index.jsx":"1","D:\\Projetos\\react-blog\\client\\src\\components\\TextArea\\styles.js":"2"},{"size":2662,"mtime":1616721258809,"results":"3","hashOfConfig":"4"},{"size":990,"mtime":1616721258807,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1stncme",{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projetos\\react-blog\\client\\src\\pages\\admin\\Profile\\index.jsx",["10"],"D:\\Projetos\\react-blog\\client\\src\\components\\TextArea\\styles.js",[],{"ruleId":"11","severity":1,"message":"12","line":18,"column":15,"nodeType":"13","endLine":23,"endColumn":6},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression"]